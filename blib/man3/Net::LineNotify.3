.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::LineNotify 3"
.TH Net::LineNotify 3 "2024-09-29" "perl v5.36.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::LineNotify \- LINE Notify API用の簡単なPerlラッパー
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Net::LineNotify;
\&
\&  my $line = Net::LineNotify\->new(access_token => \*(AqYOUR_ACCESS_TOKEN\*(Aq);
\&  $line\->send_message(\*(AqHello from Perl!\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Net::LineNotify\*(C'\fRは、LINE Notify APIを使用してLINEアカウントに通知を送信するためのシンプルなPerlモジュールです。
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
.Vb 1
\&  my $line = Net::LineNotify\->new(access_token => \*(AqYOUR_ACCESS_TOKEN\*(Aq);
.Ve
.PP
新しい\f(CW\*(C`Net::LineNotify\*(C'\fRオブジェクトを作成します。アクセストークンが必要です。
.SS "send_message"
.IX Subsection "send_message"
.Vb 1
\&  $line\->send_message(\*(AqYour message here\*(Aq);
.Ve
.PP
指定したメッセージをLINEに送信します。送信が成功すれば1を返し、失敗すれば0を返します。
.SH "AUTHOR"
.IX Header "AUTHOR"
Your Name <your.email@example.com>
.SH "LICENSE"
.IX Header "LICENSE"
このライブラリはフリーソフトウェアです。Perlと同じ条件で再配布および変更が可能です。
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 61:" 4
.IX Item "Around line 61:"
Non-ASCII character seen before =encoding in 'API用の簡単なPerlラッパー'. Assuming \s-1UTF\-8\s0
